// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile20 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile18 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "level3":
            case "level3":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "lobby":
            case "level4":return tiles.createTilemap(hex`0a000a000b0c0d0c0d0c0d0d0c04061315151515151514090615151515151515150a0612151515151515160a071515150f101515150a061515150e0f15151509071115151515151517090715151515151515150a0601151515151515180905020808080208020203`, img`
2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . 2 
2 . . . . . . . . 2 
2 . . . . . . . . 2 
2 . . . . . . . . 2 
2 . . . . . . . . 2 
2 . . . . . . . . 2 
2 . . . . . . . . 2 
2 . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,sprites.dungeon.greenOuterSouth0,sprites.dungeon.greenOuterSouthWest,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenOuterSouthEast,sprites.dungeon.greenOuterWest1,sprites.dungeon.greenOuterWest0,sprites.dungeon.greenOuterSouth1,sprites.dungeon.greenOuterEast1,sprites.dungeon.greenOuterEast0,sprites.dungeon.greenOuterNorthWest,sprites.dungeon.greenOuterNorth0,sprites.dungeon.greenOuterNorth1,sprites.dungeon.floorLight1,sprites.dungeon.floorLight4,sprites.dungeon.floorLightMoss,myTiles.tile3,myTiles.tile4,myTiles.tile5,myTiles.tile6,sprites.dungeon.darkGroundCenter,myTiles.tile2,myTiles.tile7,myTiles.tile8], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level11":
            case "level11":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level0":
            case "level7":return tiles.createTilemap(hex`100010000201010101010101010101010101010306090909090909090909090909090906060902010101010902010109010101060609060909090909060909090a06090606090403010309010509010301050906060909060b0609090909090609090906040109060904010101010105090201050709090609060909090909090906090802010105090609020101010309060902060909090906090609090906090609060609020101050904030904050906090606090609090909090609090909060906060906010101030906090201010509060609040101010509060906090909090606090909090909090609090906090c0504010101010101010101010101010505`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . 2 2 2 2 2 . 2 2 2 . 2 2 2 2 
2 . 2 . . . . . 2 . . . . 2 . 2 
2 . 2 2 2 2 . 2 2 . 2 2 2 2 . 2 
2 . . 2 . 2 . . . . . 2 . . . 2 
2 2 . 2 . 2 2 2 2 2 2 2 . 2 2 2 
. . . 2 . 2 . . . . . . . 2 . . 
2 2 2 2 . 2 . 2 2 2 2 2 . 2 . 2 
2 . . . . 2 . 2 . . . 2 . 2 . 2 
2 . 2 2 2 2 . 2 2 . 2 2 . 2 . 2 
2 . 2 . . . . . 2 . . . . 2 . 2 
2 . 2 2 2 2 2 . 2 . 2 2 2 2 . 2 
2 . 2 2 2 2 2 . 2 . 2 . . . . 2 
2 . . . . . . . 2 . . . 2 . 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile12,myTiles.tile9,myTiles.tile10,myTiles.tile11,myTiles.tile13,myTiles.tile15,sprites.dungeon.stairWest,sprites.dungeon.stairLarge,sprites.dungeon.darkGroundCenter,sprites.dungeon.collectibleInsignia,myTiles.tile16,sprites.dungeon.greenInnerNorthWest,myTiles.tile14], TileScale.Sixteen);
            case "level13":
            case "level12":return tiles.createTilemap(hex`15001500050101010101010101010101010101010101010102060a060a060c0a0a0a0a0a0a0a0a060a0a0a0a0c06060a0a0a0301010101010102020a060a060a060a06060a060a0a0a0a0a0a0a0a06060a060a060a060a06060a060a0501010101020a03040a060a060a060a06060a060a060a0a0a06060a0a0a0a060a060a060a06060a060a0301010a060301010101040a060a060a06060a0a0a0a0a0a0a060a0a0a0a0a0a0a060a060a06060a060a05010101040a050101010101040a060b060301040a060a0a0a0a0a060a0a0a0a0a0a0a060103070a0a0a060a01020101040d010101010101040a090501020a060a0a060a0a0a0a0a0a0a0a060a060a05060a060a03010a060a0501010101020a060a060a06060a0a0a0a0a0a060a060a0a0a0a060a0a0a060a06060a060a050101040a060a05020a03010d01040a06060a060a060a0a0a0a060a06040a060a0a0b060a06060a060a03040a0501040a060a0a060a0501040a06060a060a0a0a0a060b0a0a060a05040a060a0a0a06060a0a0a0501010401010a060a060a0a0601010a06060a060a06080a0a0a0a0a0a0a060a0504080a0c06030101010101010101010101010101010101010104`, img`
222222222222222222222
2.2.2.........2.....2
2...222222222.2.2.2.2
2.2........22.2.2.2.2
2.2.222222.22.2.2.2.2
2.2.2...22....2.2.2.2
2.2.222.2222222.2.2.2
2.......2.......2.2.2
2.2.22222.2222222.2.2
222.2.....2.......222
....2.22222.2222222..
222.2..2........2.2.2
2.2.22.2.222222.2.2.2
2......2.2....2...2.2
2.2.2222.2.22.22.22.2
2.2.2....2.22.2...2.2
2.2.22.222.2..2.222.2
2.2....2...2.22.2...2
2...222222.2.2..222.2
2.2.2........2.22...2
222222222222222222222
`, [myTiles.transparency16,myTiles.tile12,myTiles.tile10,myTiles.tile11,myTiles.tile13,myTiles.tile9,myTiles.tile15,sprites.dungeon.stairEast,myTiles.tile16,sprites.dungeon.stairLarge,sprites.dungeon.darkGroundCenter,sprites.dungeon.collectibleInsignia,sprites.dungeon.floorLight2,myTiles.tile20], TileScale.Sixteen);
            case "TestMap":
            case "level10":return tiles.createTilemap(hex`14000600030b06030b040104060b0b060603040b01060b0108101002171314101116151210021818141010070d1010101010101010101010101010101010100c0d1010101010101010101010101010101010100c0810101010101010100f0f101010101010101005020e0a090e0a0e090a0e0e090a0e0a0e090a0e14`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . 2 . . 2 . . . . . . 2 . . 2 . . 2 
2 . . . . . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.purpleOuterNorthEast,sprites.dungeon.purpleOuterSouthEast,sprites.dungeon.purpleOuterNorthWest,sprites.dungeon.purpleOuterNorth1,sprites.dungeon.purpleOuterEast0,sprites.dungeon.purpleOuterNorth0,sprites.dungeon.purpleOuterEast1,sprites.dungeon.purpleOuterWest1,sprites.dungeon.purpleOuterSouth0,sprites.dungeon.purpleOuterSouth1,sprites.dungeon.purpleOuterNorth2,sprites.dungeon.purpleOuterEast2,sprites.dungeon.purpleOuterWest2,sprites.dungeon.purpleOuterSouth2,sprites.dungeon.stairLarge,sprites.dungeon.darkGroundCenter,sprites.dungeon.stairWest,sprites.dungeon.stairEast,sprites.dungeon.purpleSwitchUp,sprites.dungeon.purpleOuterSouthWest,sprites.dungeon.stairSouth,sprites.dungeon.stairNorth,sprites.dungeon.purpleSwitchDown,myTiles.tile20], TileScale.Sixteen);
            case "level14":
            case "level14":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level16":
            case "level15":return tiles.createTilemap(hex`19001900050101010101010101010101010101010101010101010101020606000301010101010101010101010200000000000000000606060000000000000000000000000006000501010101010bc0000060606000000000000000006000600030200060101010101010606060005010101010101040a06000906000000000000000a0603010101010101010101010101010101010101010101010104`, img`
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
.........................
`, [myTiles.transparency16,myTiles.tile12,myTiles.tile10,myTiles.tile11,myTiles.tile13,myTiles.tile9,myTiles.tile15,sprites.dungeon.stairWest,sprites.dungeon.stairLarge,sprites.dungeon.collectibleInsignia,myTiles.tile16,myTiles.tile20,myTiles.tile18], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile6":return tile6;
            case "tile2":return tile2;
            case "tile7":return tile7;
            case "tile8":return tile8;
            case "tile1":return tile1;
            case "tile3":return tile3;
            case "tile4":return tile4;
            case "tile5":return tile5;
            case "myTile2":
            case "tile12":return tile12;
            case "myTile0":
            case "tile10":return tile10;
            case "myTile1":
            case "tile11":return tile11;
            case "myTile3":
            case "tile13":return tile13;
            case "myTile":
            case "tile9":return tile9;
            case "myTile5":
            case "tile15":return tile15;
            case "myTile6":
            case "tile16":return tile16;
            case "myTile4":
            case "tile14":return tile14;
            case "myTile9":
            case "tile20":return tile20;
            case "myTile8":
            case "tile18":return tile18;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
